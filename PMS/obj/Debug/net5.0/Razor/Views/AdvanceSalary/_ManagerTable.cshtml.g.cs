#pragma checksum "C:\Users\Admin\source\repos\DM_PMS-master\DM_PMS-master\PMS\Views\AdvanceSalary\_ManagerTable.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "0d11fe47d30e66d6de6780ff6904b1f7c024c8bed7d5ffd101fc1ad15f918008"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_AdvanceSalary__ManagerTable), @"mvc.1.0.view", @"/Views/AdvanceSalary/_ManagerTable.cshtml")]
namespace AspNetCore
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Admin\source\repos\DM_PMS-master\DM_PMS-master\PMS\Views\_ViewImports.cshtml"
using PMS

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\Admin\source\repos\DM_PMS-master\DM_PMS-master\PMS\Views\_ViewImports.cshtml"
using PMS.Models

#line default
#line hidden
#nullable disable
    ;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"0d11fe47d30e66d6de6780ff6904b1f7c024c8bed7d5ffd101fc1ad15f918008", @"/Views/AdvanceSalary/_ManagerTable.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"21d866b776ed6466e6893069e209361096b8f3be545ab23ace3daa4c5be95fd9", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_AdvanceSalary__ManagerTable : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<int?>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/handsontable@14.3.0/dist/handsontable.full.min.css"" />
<div id=""salaryPolicyTableWrapper"" style=""overflow:auto;"">
    <div id=""salaryPolicyTable""></div>

    <script src=""https://cdn.jsdelivr.net/npm/handsontable@14.3.0/dist/handsontable.full.min.js""></script>
    <script>
        (function () {
            const container = document.getElementById('salaryPolicyTable');

            const nestedHeaders = [
                [
                    'TT', 'Họ và tên', 'Mã cán bộ', 'Số TK',
                    'Hệ số lương', 'Hệ số PC', 'Tổng hệ số',
                    'Lương chế độ 1 tháng', 'Tạm ứng lương chế độ',
                    { label: 'Mức lương CSDN 3.180.000đ/hsl; thu mức 10.5%', colspan: 3 },
                    'Truy lĩnh', 'Truy thu', 'TỔNG LĨNH', 'Ghi chú'
                ],
                [
                    '', '', '', '', '', '', '', '', '',
                    'BHXH (8%)', 'BHYT (1.5%)', 'BH thất nghiệp (1%)',
                    '', ");
            WriteLiteral(@"'', '', ''
                ]
            ];

            const columns = [
                { data: 0, type: 'numeric', width: 50 },   // TT
                { data: 1, type: 'text', width: 160 },     // Họ và tên
                { data: 2, type: 'text', width: 100 },     // Mã cán bộ
                { data: 3, type: 'text', width: 120 },     // Số TK
                { data: 4, type: 'numeric', numericFormat: { pattern: '0.00' }, width: 100 }, // Hệ số lương
                { data: 5, type: 'numeric', numericFormat: { pattern: '0.00' }, width: 100 }, // Hệ số PC
                { data: 6, type: 'numeric', numericFormat: { pattern: '0.00' }, width: 100 }, // Tổng hệ số
                { data: 7, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 130 },  // Lương chế độ 1 tháng
                { data: 8, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 150 },  // Tạm ứng lương chế độ
                { data: 9, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 110 },  // BHXH
           ");
            WriteLiteral(@"     { data: 10, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 110 }, // BHYT
                { data: 11, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 130 }, // BHTN
                { data: 12, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 100 }, // Truy lĩnh
                { data: 13, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 100 }, // Truy thu
                { data: 14, type: 'numeric', numericFormat: { pattern: '0,0' }, readOnly: true, width: 120 }, // Tổng lĩnh
                { data: 15, type: 'text', width: 100 },    // Ghi chú
            ];

            const data = [
                [1, 'Nguyễn 001', 'xxx', '2619969696', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '', '', '#N/A', ''],
                [2, 'Nguyễn 002', 'xxx', '8800090500', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '', '', '#N/A', ''],
                [3, 'Nguyễn 003', 'xxx', '2610556699', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A',");
            WriteLiteral(@" '#N/A', '#N/A', '', '', '#N/A', ''],
                [4, 'Nguyễn 004', 'xxx', '8800015659', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '', '', '#N/A', ''],
                [5, 'Nguyễn 005', 'xxx', '2610023780', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '', '', '#N/A', ''],
                [6, 'Nguyễn 006', 'xxx', '2610022990', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '', '', '#N/A', ''],
                [7, 'Nguyễn 007', 'xxx', '2610023975', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '#N/A', '', '', '#N/A', ''],
            ];

            const hot = new Handsontable(container, {
                data: data,
                columns: columns,
                colHeaders: false,
                rowHeaders: true,
                nestedHeaders: nestedHeaders,
                height: calculateHotHeight(),
                width: '100%',
                stretchH: 'all',
                manualColumnFreeze: true,
                manualColum");
            WriteLiteral(@"nMove: true,
                fixedColumnsLeft: 2,
                contextMenu: {
                    items: {
                        row_above: {},
                        row_below: {},
                        hsep1: '---------',
                        freeze_column: { name: 'Cố định cột' },
                        unfreeze_column: { name: 'Bỏ cố định cột' },
                        hsep2: '---------',
                        undo: {},
                        redo: {},
                        clear_custom: {
                            name: 'Xóa nội dung các ô đã chọn',
                            callback() { hot.emptySelectedCells(); }
                        }
                    }
                },
                filters: true,
                dropdownMenu: true,
                licenseKey: 'non-commercial-and-evaluation',
                afterChange: function (changes, source) {
                    if (source === 'loadData' || !changes) return;

                    changes.forEach(([row, prop, oldV");
            WriteLiteral(@"al, newVal]) => {
                        const luong = parseFloat(hot.getDataAtCell(row, 7)) || 0;
                        const tamUng = parseFloat(hot.getDataAtCell(row, 8)) || 0;
                        const bhxh = parseFloat(hot.getDataAtCell(row, 9)) || 0;
                        const bhyt = parseFloat(hot.getDataAtCell(row, 10)) || 0;
                        const bhtn = parseFloat(hot.getDataAtCell(row, 11)) || 0;
                        const truyLinh = parseFloat(hot.getDataAtCell(row, 12)) || 0;
                        const truyThu = parseFloat(hot.getDataAtCell(row, 13)) || 0;

                        const tongLinh = luong - tamUng - bhxh - bhyt - bhtn + truyLinh - truyThu;
                        hot.setDataAtCell(row, 14, tongLinh);
                    });
                }
            });

            function calculateHotHeight() {
                const windowHeight = window.innerHeight;
                const offset = 360;
                const calculated = windowHeight - offset;
         ");
            WriteLiteral(@"       return Math.max(calculated, 400);
            }

            window.addEventListener('resize', () => {
                const newHeight = calculateHotHeight();
                hot.updateSettings({ height: newHeight });
            });
        })();
    </script>
</div>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<int?> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
