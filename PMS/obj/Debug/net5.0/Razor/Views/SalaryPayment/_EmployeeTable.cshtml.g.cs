#pragma checksum "D:\ETek\DM_PMS-master\PMS\Views\SalaryPayment\_EmployeeTable.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "515e41f1bc2097ae5a2fa74174525cd008ffa595"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_SalaryPayment__EmployeeTable), @"mvc.1.0.view", @"/Views/SalaryPayment/_EmployeeTable.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ETek\DM_PMS-master\PMS\Views\_ViewImports.cshtml"
using PMS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ETek\DM_PMS-master\PMS\Views\_ViewImports.cshtml"
using PMS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"515e41f1bc2097ae5a2fa74174525cd008ffa595", @"/Views/SalaryPayment/_EmployeeTable.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"93ce4f72f6dfce34342b9241fe3c069991c39bf1", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_SalaryPayment__EmployeeTable : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<int?>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<link rel=""stylesheet"" href=""https://cdn.jsdelivr.net/npm/handsontable@14.3.0/dist/handsontable.full.min.css"" />
<div id=""advanceSalaryWrapper"" style=""overflow:auto;"">
    <div id=""advanceSalaryTable""></div>

    <script src=""https://cdn.jsdelivr.net/npm/handsontable@14.3.0/dist/handsontable.full.min.js""></script>
    <script>
        (function () {
            const container = document.getElementById('advanceSalaryTable');

            const nestedHeaders = [
                [
                    'TT', 'Họ và tên', 'Mã nhân viên', 'Số TK',
                    'Hệ Số lương', 'HS phụ cấp', 'Tổng HSL',
                    'Lương chế độ 1 tháng', 'Đã tạm ứng',
                    { label: 'Lĩnh tiền', colspan: 3 },
                    'Truy lĩnh', 'Truy thu', 'TỔNG LĨNH', 'Ghi chú'
                ],
                [
                    '', '', '', '', '', '', '', '', '',
                    'Quyết toán lương chế độ', 'Ăn ca', 'Ca đêm, thêm giờ',
                    '', '', '', ''
                ]
          ");
            WriteLiteral(@"  ];

            const columns = [
                { data: 0, type: 'numeric', width: 40 },     // TT
                { data: 1, type: 'text', width: 160 },       // Họ và tên
                { data: 2, type: 'text', width: 100 },       // Mã nhân viên
                { data: 3, type: 'text', width: 120 },       // Số TK
                { data: 4, type: 'numeric', numericFormat: { pattern: '0.00' }, width: 90 },  // Hệ số lương
                { data: 5, type: 'numeric', numericFormat: { pattern: '0.00' }, width: 90 },  // HS phụ cấp
                { data: 6, type: 'numeric', numericFormat: { pattern: '0.00' }, width: 90 },  // Tổng HSL
                { data: 7, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 130 },  // Lương chế độ 1 tháng
                { data: 8, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 110 },  // Đã tạm ứng
                { data: 9, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 140 },  // Quyết toán lương chế độ
                { data: 10, ty");
            WriteLiteral(@"pe: 'numeric', numericFormat: { pattern: '0,0' }, width: 90 },  // Ăn ca
                { data: 11, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 140 }, // Ca đêm, thêm giờ
                { data: 12, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 90 },  // Truy lĩnh
                { data: 13, type: 'numeric', numericFormat: { pattern: '0,0' }, width: 90 },  // Truy thu
                { data: 14, type: 'numeric', numericFormat: { pattern: '0,0' }, readOnly: true, width: 120 }, // TỔNG LĨNH
                { data: 15, type: 'text', width: 100 },      // Ghi chú
            ];

            const data = [
                [1, 'Nguyễn A', 'ZZZ', 'ZZZ'],
                [2, 'Nguyễn 002', 'ZZZ', 'ZZZ'],
                [3, 'Nguyễn B', 'ZZZ', '#N/A'],
                [4, 'Nguyễn 004', 'ZZZ', '#N/A'],
                [5, 'Nguyễn C', 'ZZZ', '#N/A'],
                [6, 'Nguyễn 006', 'ZZZ', '#N/A'],
                [7, 'Nguyễn D', 'ZZZ', '#N/A'],
                [8, 'Nguyễn 008', 'ZZZ', '#N/A");
            WriteLiteral(@"'],
                [9, 'Nguyễn E', 'ZZZ', '#N/A'],
            ];

            const hot = new Handsontable(container, {
                data: data,
                columns: columns,
                colHeaders: false,
                rowHeaders: true,
                nestedHeaders: nestedHeaders,
                stretchH: 'all',
                height: calculateHotHeight(),
                manualColumnFreeze: true,
                manualColumnMove: true,
                fixedColumnsLeft: 2,
                contextMenu: {
                    items: {
                        row_above: {},
                        row_below: {},
                        hsep1: '---------',
                        freeze_column: { name: 'Cố định cột' },
                        unfreeze_column: { name: 'Bỏ cố định cột' },
                        hsep2: '---------',
                        undo: {},
                        redo: {},
                        clear_custom: {
                            name: 'Xóa nội dung các ô đã chọ");
            WriteLiteral(@"n',
                            callback() { hot.emptySelectedCells(); }
                        }
                    }
                },
                filters: true,
                dropdownMenu: true,
                licenseKey: 'non-commercial-and-evaluation',
                afterChange: function (changes, source) {
                    if (source === 'loadData' || !changes) return;

                    changes.forEach(([row, prop, oldVal, newVal]) => {
                        const luong = parseFloat(hot.getDataAtCell(row, 7)) || 0;
                        const daTamUng = parseFloat(hot.getDataAtCell(row, 8)) || 0;
                        const qtLuong = parseFloat(hot.getDataAtCell(row, 9)) || 0;
                        const anCa = parseFloat(hot.getDataAtCell(row, 10)) || 0;
                        const caDem = parseFloat(hot.getDataAtCell(row, 11)) || 0;
                        const truyLinh = parseFloat(hot.getDataAtCell(row, 12)) || 0;
                        const truyThu = parseFloat(hot.ge");
            WriteLiteral(@"tDataAtCell(row, 13)) || 0;

                        const tongLinh = luong - daTamUng + qtLuong + anCa + caDem + truyLinh - truyThu;
                        hot.setDataAtCell(row, 14, tongLinh);
                    });
                }
            });

            function calculateHotHeight() {
                const windowHeight = window.innerHeight;
                const offset = 360;
                const calculated = windowHeight - offset;
                return Math.max(calculated, 420);
            }

            window.addEventListener('resize', () => {
                hot.updateSettings({ height: calculateHotHeight() });
            });
        })();
    </script>
</div>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<int?> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
